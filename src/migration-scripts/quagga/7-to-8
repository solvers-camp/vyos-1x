#!/usr/bin/env python3
#
# Copyright (C) 2021 VyOS maintainers and contributors
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or later as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# - T3391: Migrate "maximum-paths" setting from "protocols bgp asn maximum-paths"
#   under the IPv4 address-family tree. Reason is we currently have no way in
#   configuring this for IPv6 address-family. This mimics the FRR configuration.

from sys import argv
from sys import exit
from vyos.configtree import ConfigTree

if len(argv) < 2:
    print("Must specify file name!")
    exit(1)

file_name = argv[1]

with open(file_name, 'r') as f:
    config_file = f.read()

base = ['protocols', 'bgp']
config = ConfigTree(config_file)

if not config.exists(base):
    # Nothing to do
    exit(0)

# Check if BGP is actually configured and obtain the ASN
asn_list = config.list_nodes(base)
if asn_list:
    # There's always just one BGP node, if any
    bgp_base = base + [asn_list[0]]

    maximum_paths = bgp_base + ['maximum-paths']
    if config.exists(maximum_paths):
        for bgp_type in ['ebgp', 'ibgp']:
            if config.exists(maximum_paths + [bgp_type]):
                new_base =  bgp_base + ['address-family', 'ipv4-unicast', 'maximum-paths']
                config.set(new_base)
                config.copy(maximum_paths + [bgp_type], new_base + [bgp_type])
        config.delete(maximum_paths)

try:
    with open(file_name, 'w') as f:
        f.write(config.to_string())
except OSError as e:
    print("Failed to save the modified config: {}".format(e))
    exit(1)
