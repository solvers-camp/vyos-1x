#!/usr/bin/env python3
#
# Copyright (C) 2020 VyOS maintainers and contributors
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or later as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# T3043: Move "system wifi-regulatory-domain" to indicidual wireless interface.
#        Country Code will be migratred from upper to lower case.
# T3140: Relax ethernet interface offload-options

from sys import exit, argv
from vyos.configtree import ConfigTree

if __name__ == '__main__':
    if len(argv) < 2:
        print("Must specify file name!")
        exit(1)

    file_name = argv[1]
    with open(file_name, 'r') as f:
        config_file = f.read()

    config = ConfigTree(config_file)

    # T3140: Cleanup ethernet offload-options, remove on/off value and use
    # valueless nodes instead.
    eth_base = ['interfaces', 'ethernet']
    if config.exists(eth_base):
        for eth in config.list_nodes(eth_base):
           offload = eth_base + [eth, 'offload-options']
           if config.exists(offload):
                mapping = {
                    'generic-receive'      : 'gro',
                    'generic-segmentation' : 'gso',
                    'scatter-gather'       : 'sg',
                    'tcp-segmentation'     : 'tso',
                    'udp-fragmentation'    : 'ufo',
                }
                for k, v in mapping.items():
                    if config.exists(offload + [k]):
                        tmp = config.return_value(offload + [k])
                        if tmp == 'on':
                            config.set(eth_base + [eth, 'offload', v])

                config.delete(offload)

    # T3043: WIFI country-code should be lower-case
    wifi_base = ['interfaces', 'wireless']
    if config.exists(wifi_base):
        for wifi in config.list_nodes(wifi_base):
            ccode = wifi_base + [wifi, 'country-code']
            if config.exists(ccode):
                tmp = config.return_value(ccode)
                config.set(ccode, value=tmp.lower(), replace=True)

    try:
        with open(file_name, 'w') as f:
            f.write(config.to_string())
    except OSError as e:
        print("Failed to save the modified config: {}".format(e))
        exit(1)
