#!/usr/bin/env python3
#
# Copyright (C) 2023 VyOS maintainers and contributors
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or later as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# T5779: system conntrack timeout custom
# Before:
#   Protocols tcp, udp and icmp allowed. When using udp it did not work
#   Only ipv4 custom timeout rules
# Now:
#   Valid protocols are only tcp or udp.
#   Extend functionality to ipv6 and move ipv4 custom rules to new node:
#       set system conntrack timeout custom [ipv4 | ipv6] rule <rule> ...

from sys import argv
from sys import exit

from vyos.configtree import ConfigTree

if len(argv) < 2:
    print("Must specify file name!")
    exit(1)

file_name = argv[1]

with open(file_name, 'r') as f:
    config_file = f.read()

base = ['system', 'conntrack']
config = ConfigTree(config_file)

if not config.exists(base):
    # Nothing to do
    exit(0)

if config.exists(base + ['timeout', 'custom', 'rule']):
    for rule in config.list_nodes(base + ['timeout', 'custom', 'rule']):
        if config.exists(base + ['timeout', 'custom', 'rule', rule, 'protocol', 'tcp']):
            config.set(base + ['timeout', 'custom', 'ipv4', 'rule'])
            config.copy(base + ['timeout', 'custom', 'rule', rule], base + ['timeout', 'custom', 'ipv4', 'rule', rule])
    config.delete(base + ['timeout', 'custom', 'rule'])

try:
    with open(file_name, 'w') as f:
        f.write(config.to_string())
except OSError as e:
    print("Failed to save the modified config: {}".format(e))
    exit(1)
