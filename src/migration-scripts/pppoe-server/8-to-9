#!/usr/bin/env python3
#
# Copyright (C) 2024 VyOS maintainers and contributors
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or later as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Change from 'ccp' to 'disable-ccp' in ppp-option section
# Migration ipv6 options

from sys import argv
from sys import exit
from vyos.configtree import ConfigTree

if len(argv) < 2:
    print("Must specify file name!")
    exit(1)

file_name = argv[1]

with open(file_name, 'r') as f:
    config_file = f.read()

config = ConfigTree(config_file)
base = ['service', 'pppoe-server']
if not config.exists(base):
    exit(0)

#CCP migration
if config.exists(base + ['ppp-options', 'ccp']):
    config.delete(base + ['ppp-options', 'ccp'])
else:
    config.set(base + ['ppp-options', 'disable-ccp'])

#IPV6 options migrations
if config.exists(base + ['ppp-options','ipv6-peer-intf-id']):
    intf_peer_id = config.return_value(base + ['ppp-options','ipv6-peer-intf-id'])
    if intf_peer_id == 'ipv4':
        intf_peer_id = 'ipv4-addr'
    config.set(base + ['ppp-options','ipv6-peer-interface-id'], value=intf_peer_id, replace=True)
    config.delete(base + ['ppp-options','ipv6-peer-intf-id'])

if config.exists(base + ['ppp-options','ipv6-intf-id']):
    intf_id = config.return_value(base + ['ppp-options','ipv6-intf-id'])
    config.set(base + ['ppp-options','ipv6-interface-id'], value=intf_id, replace=True)
    config.delete(base + ['ppp-options','ipv6-intf-id'])

if config.exists(base + ['ppp-options','ipv6-accept-peer-intf-id']):
    config.set(base + ['ppp-options','ipv6-accept-peer-interface-id'])
    config.delete(base + ['ppp-options','ipv6-accept-peer-intf-id'])

try:
    with open(file_name, 'w') as f:
        f.write(config.to_string())
except OSError as e:
    print("Failed to save the modified config: {}".format(e))
    exit(1)
