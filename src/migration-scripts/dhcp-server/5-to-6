#!/usr/bin/env python3
#
# Copyright (C) 2021 VyOS maintainers and contributors
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or later as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# T1968: allow multiple static-routes to be configured
# T3838: rename dns-server -> name-server

import sys
from vyos.configtree import ConfigTree

if len(sys.argv) < 2:
    print("Must specify file name!")
    sys.exit(1)

file_name = sys.argv[1]

with open(file_name, 'r') as f:
    config_file = f.read()

base = ['service', 'dhcp-server']
config = ConfigTree(config_file)

if not config.exists(base + ['shared-network-name']):
    # Nothing to do
    exit(0)

# Run this for every instance if 'shared-network-name'
for network in config.list_nodes(base + ['shared-network-name']):
    base_network = base + ['shared-network-name', network]

    if not config.exists(base_network + ['subnet']):
        continue

    # Run this for every specified 'subnet'
    for subnet in config.list_nodes(base_network + ['subnet']):
        base_subnet = base_network + ['subnet', subnet]

        # T1968: allow multiple static-routes to be configured
        if config.exists(base_subnet + ['static-route']):
            prefix = config.return_value(base_subnet + ['static-route', 'destination-subnet'])
            router = config.return_value(base_subnet + ['static-route', 'router'])
            config.delete(base_subnet + ['static-route'])

            config.set(base_subnet + ['static-route', prefix, 'next-hop'], value=router)
            config.set_tag(base_subnet + ['static-route'])

        # T3838: rename dns-server -> name-server
        if config.exists(base_subnet + ['dns-server']):
            config.rename(base_subnet + ['dns-server'], 'name-server')


        # T3672: ISC DHCP server only supports one failover peer
        if config.exists(base_subnet + ['failover']):
            # There can only be one failover configuration, if none is present
            # we add the first one
            if not config.exists(base + ['failover']):
                local = config.return_value(base_subnet + ['failover', 'local-address'])
                remote = config.return_value(base_subnet + ['failover', 'peer-address'])
                status = config.return_value(base_subnet + ['failover', 'status'])
                name = config.return_value(base_subnet + ['failover', 'name'])

                config.set(base + ['failover', 'remote'], value=remote)
                config.set(base + ['failover', 'source-address'], value=local)
                config.set(base + ['failover', 'status'], value=status)
                config.set(base + ['failover', 'name'], value=name)

            config.delete(base_subnet + ['failover'])
            config.set(base_subnet + ['enable-failover'])

try:
    with open(file_name, 'w') as f:
        f.write(config.to_string())
except OSError as e:
    print("Failed to save the modified config: {}".format(e))
    exit(1)
