#!/usr/bin/env python3
#
# Copyright (C) 2023 VyOS maintainers and contributors
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or later as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# T3316:
# - Adjust hostname to have valid FQDN characters only (underscores aren't allowed anymore)
# - Adjust duid (old identifier) to comply with duid format
# - Rename "service dhcpv6-server shared-network-name ... static-mapping <hostname> identifier ..."
#       to "service dhcpv6-server shared-network-name ... static-mapping <hostname> duid ..."
# - Rename "service dhcpv6-server shared-network-name ... static-mapping <hostname> mac-address ..."
#       to "service dhcpv6-server shared-network-name ... static-mapping <hostname> mac ..."

import sys
import re
from vyos.configtree import ConfigTree

if len(sys.argv) < 2:
    print("Must specify file name!")
    sys.exit(1)

file_name = sys.argv[1]

with open(file_name, 'r') as f:
    config_file = f.read()

base = ['service', 'dhcpv6-server', 'shared-network-name']
config = ConfigTree(config_file)

if not config.exists(base):
    # Nothing to do
    sys.exit(0)

for network in config.list_nodes(base):
    # Run this for every specified 'subnet'
    if config.exists(base + [network, 'subnet']):
        for subnet in config.list_nodes(base + [network, 'subnet']):
            base_subnet = base + [network, 'subnet', subnet]
            if config.exists(base_subnet + ['static-mapping']):
                for hostname in config.list_nodes(base_subnet + ['static-mapping']):
                    base_mapping = base_subnet + ['static-mapping', hostname]
                    if config.exists(base_mapping + ['identifier']):

                        # Adjust duid to comply with duid format (a:3:b:04:... => 0a:03:0b:04:...)
                        duid = config.return_value(base_mapping + ['identifier'])
                        new_duid = ':'.join(x.rjust(2,'0') for x in duid.split(':'))
                        if new_duid != duid:
                            config.set(base_mapping + ['identifier'], new_duid)

                        # Rename the 'identifier' node to 'duid'
                        config.rename(base_mapping + ['identifier'], 'duid')

                    # Rename the 'mac-address' node to 'mac'
                    if config.exists(base_mapping + ['mac-address']):
                        config.rename(base_mapping + ['mac-address'], 'mac')

                    # Adjust hostname to have valid FQDN characters only
                    new_hostname = re.sub(r'[^a-zA-Z0-9-.]', '-', hostname)
                    if new_hostname != hostname:
                        config.rename(base_mapping, new_hostname)

try:
    with open(file_name, 'w') as f:
        f.write(config.to_string())
except OSError as e:
    print("Failed to save the modified config: {}".format(e))
    exit(1)
