# autogenerated by service_ndp-proxy.py

# This tells 'ndppd' how often to reload the route file /proc/net/ipv6_route
route-ttl {{ route_refresh }}

{% if interface is vyos_defined %}
# This sets up a listener, that will listen for any Neighbor Solicitation
# messages, and respond to them according to a set of rules
{%     for iface, iface_config in interface.items() if iface_config.disable is not vyos_defined %}
proxy {{ iface }} {
    # Turn on or off the router flag for Neighbor Advertisements
    router {{ 'yes' if iface_config.enable_router_bit is vyos_defined else 'no' }}
    # Control how long to wait for a Neighbor Advertisment message before invalidating the entry (milliseconds)
    timeout {{ iface_config.timeout }}
    # Control how long a valid or invalid entry remains in the cache (milliseconds)
    ttl {{ iface_config.ttl }}

{%         if iface_config.prefix is vyos_defined %}
    # This is a rule that the target address is to match against. If no netmask
    # is provided, /128 is assumed. You may have several rule sections, and the
    # addresses may or may not overlap.
{%             for prefix, prefix_config in iface_config.prefix.items() if prefix_config.disable is not vyos_defined %}
    rule {{ prefix }} {
{%                 if prefix_config.mode is vyos_defined('interface') %}
        iface {{ prefix_config.interface }}
{%                 else %}
        {{ prefix_config.mode }}
{%                 endif %}
    }
{%             endfor %}
{%         endif %}
}

{%     endfor %}
{% endif %}
